using HDF5 
using Printf
using LinearAlgebra
using DataFrames
import Random, Distributions

using VQE
using Zygote
using PyPlot
using Parameters
using NLopt
using DocStringExtensions
using OrdinaryDiffEq
#using Yao
using YaoBlocks, ChainRulesCore



function expand_blocks(arr::Vector{T}, n::Int) where T
    """
    Given `arr` of length p*(2n+1), split into p blocks each of length (2n+1).
    For each block:
      - After the n-th element, insert two copies of that element.
      - After the (2n)-th element, insert two copies of that element.
    The resulting block has length (2n+5). Concatenate all p expanded blocks
    and return the final expanded array of length p*(2n+5).
    """
    
    # Number of blocks
    block_len = 2n + 1
    p = length(arr) รท block_len
    
    # Prepare the result container (length p*(2n + 5))
    new_len = p * (2n + 5)
    new_arr = Vector{T}(undef, new_len)
    
    # We'll track position in new_arr as we go
    idx_new = 1
    
    for block_idx in 0:(p-1)
        # Identify the sub-block in arr
        start_idx = block_idx * block_len + 1
        stop_idx  = start_idx + block_len - 1
        block = arr[start_idx : stop_idx]  # length (2n+1)
        
        # 1) Copy elements 1..n
        for i in 1:n
            new_arr[idx_new] = block[i]
            idx_new += 1
        end
        
        # 2) Insert two copies of the n-th element
        new_arr[idx_new]   = block[n]
        new_arr[idx_new+1] = block[n]
        idx_new += 2
        
        # 3) Copy elements (n+1)..(2n)
        for i in (n+1):(2n)
            new_arr[idx_new] = block[i]
            idx_new += 1
        end
        
        # 4) Insert two copies of the (2n)-th element
        new_arr[idx_new]   = block[2n]
        new_arr[idx_new+1] = block[2n]
        idx_new += 2
        
        # 5) Finally, copy the last element (index 2n+1)
        new_arr[idx_new] = block[2n+1]
        idx_new += 1
    end
    
    return new_arr
end


function expand_blocks_2(arr::Vector{T}, arr2::Vector{T}, n::Int) where T
    # Number of blocks
    block_len = 2n + 1
    p = length(arr) รท block_len

    # Prepare the result container (length p*(2n + 5))
    new_len = p * (2n + 5)
    new_arr = Vector{T}(undef, new_len)

    # We'll track position in new_arr as we go
    idx_new = 1

    for block_idx in 0:(p-1)
        # Identify the sub-block in arr
        start_idx = block_idx * block_len + 1
        stop_idx  = start_idx + block_len - 1
        block = arr[start_idx : stop_idx]  # length (2n+1)

        # 1) Copy elements 1..n
        for i in 1:n
            new_arr[idx_new] = block[i]
            idx_new += 1
        end

        # 2) Instead of inserting two copies of block[n],
        #    insert the two additional elements provided in arr2.
        new_arr[idx_new]   = arr2[1]
        new_arr[idx_new+1] = arr2[2]
        idx_new += 2

        # 3) Copy elements (n+1)..(2n)
        for i in (n+1):(2n)
            new_arr[idx_new] = block[i]
            idx_new += 1
        end

        # 4) Insert two copies of the (2n)-th element (unchanged)
        new_arr[idx_new]   = arr2[1]
        new_arr[idx_new+1] = arr2[2]
        idx_new += 2

        # 5) Finally, copy the last element (index 2n+1)
        new_arr[idx_new] = block[2n+1]
        idx_new += 1
    end

    return new_arr
end


function replace_blocks(arr::Vector{T}, arr2::Vector{T}, n::Int) where T
    # Number of blocks
    block_len = 2n + 1
    p = length(arr) รท block_len

    # Prepare the result container (length p*(2n + 5))
    new_len = p * (2n + 1)
    new_arr = Vector{T}(undef, new_len)

    # We'll track position in new_arr as we go
    idx_new = 1

    for block_idx in 0:(p-1)
        # Identify the sub-block in arr
        start_idx = block_idx * block_len + 1
        stop_idx  = start_idx + block_len - 1
        block = arr[start_idx : stop_idx]  # length (2n+1)

        # 1) Copy elements 1..n
        for i in 1:n-2
            new_arr[idx_new] = block[i]
            idx_new += 1
        end

        # 2) Instead of inserting two copies of block[n],
        #    insert the two additional elements provided in arr2.
        new_arr[idx_new]   = arr2[idx_new]
        new_arr[idx_new+1] = arr2[idx_new+1]
        idx_new += 2

        # 3) Copy elements (n+1)..(2n)
        for i in (n+1):(2n-2)
            new_arr[idx_new] = block[i]
            idx_new += 1
        end

        # 4) Insert two copies of the (2n)-th element (unchanged)
        new_arr[idx_new]   = arr2[idx_new]
        new_arr[idx_new+1] = arr2[idx_new+1]
        idx_new += 2

        # 5) Finally, copy the last element (index 2n+1)
        new_arr[idx_new] = block[2n+1]
        idx_new += 1
    end

    return new_arr
end



# load the MAX2SAT instance data

N = 16
#N = parse(Int, ARGS[1])
num_clauses = 60 #3N

p = 15

PATH = raw"/home/ubuntu/MAX2SAT/"


#subdir = "small_gaps"
# subdir = "large_gaps"

# permutation data
#folder_name = PATH * @sprintf("//MAX2SAT_transformation_instances//N_%i//", N);
folder_name = PATH * @sprintf("//MAX2SAT_transformation_instances//N_%i//cl_60//", N);

# transformed data
#folder_name = PATH * @sprintf("//MAX2SAT_transformation_instances//trans_test//N_%i//", N);


### change N in the pattern individually 
pattern = r"transformed_MAX2SAT_instance_N_16_idx_(\d{4})\.h5"

###

instance_names = readdir(folder_name)
loop_var = 1
#loop_var = parse(Int, ARGS[2])
total_num_inst = 0

for (k, instance_name) in enumerate(instance_names[loop_var+200:loop_var+600])

    global total_num_inst = k
    println("current instance count: ", k)

    idx = match(pattern, instance_name)[1]
    idx = parse(Int64, idx)
    println("idx: ", idx)

    file_name = folder_name * @sprintf("transformed_MAX2SAT_instance_N_%i_idx_%04i.h5", N , idx)

    gs_energy = h5read(file_name, "ground_state_energy") 
    J_mat = h5read(file_name, "couplings"); 
    local_fields = h5read(file_name, "local_fields")
    mf_problem = Problem(0, - local_fields, J_mat);
    println(gs_energy)


    MAX_problem = Problem(p, - local_fields, J_mat) # minus sign added to local fields for MAX2SAT


    num_params = (2*N+1)*p


    global learning_rate =  0.005   
    niter = 100

    global best_cost = 0
    global best_params = zeros(num_params)
    global best_initial_params = zeros(num_params)
    global best_lr = learning_rate
    global best_probs = zeros(Float64, 2^N)
    global _params = zeros(num_params)

    # partly optimized N 14
    #global best_initial_params = [0.38863651509521013, 0.3623825230976411, 0.360279559635785, 0.35910235771401233, 0.3715381685557586, 0.38539944186491654, 0.3983821463883337, 0.41604798270364535, 0.4159298709621049, 0.4421525111903313, 0.49038612232718215, 0.5275547236351202, 0.46303289278314325, 0.35648308921267335, 0.21102556157211905, 0.24308173725376744, 0.27045368414256976, 0.2578484465676108, 0.26615511754179183, 0.2870599815680634, 0.29081842597132374, 0.31074365697359235, 0.29068402274668864, 0.3219677272441077, 0.3185711908425937, 0.30308767160583394, 0.7474659823425861, 0.8804303156033173, 0.20206903150025954, 0.4155884528764367, 0.3816625454318228, 0.37323576743220577, 0.37312734243762713, 0.3953874836470112, 0.4089370379972387, 0.42490628387287893, 0.44408413249665574, 0.45112548085075077, 0.49012888165783147, 0.5218975542602559, 0.5420768182570567, 0.5244903148234485, 0.6233458426071343, 0.14200097216568952, 0.20400835571822035, 0.24426614675799382, 0.23446483780402974, 0.22669776863396962, 0.23814698655629937, 0.23742974462153651, 0.23875545852557875, 0.21394021126599586, 0.22393681191376305, 0.1905718539957704, 0.15331713447518067, 0.366541991925871, 0.20737736446281918, -0.03871646059728074, 0.41193425415699414, 0.3898293978442212, 0.3848907198639964, 0.3747004951332473, 0.40622074875020764, 0.4119889906619981, 0.4261049116377578, 0.4376649391622323, 0.4486375482478026, 0.47249150699403936, 0.46271895398310664, 0.47944002911179945, 0.5608533010765239, 0.7105373720791388, 0.11158079862286212, 0.1835736579834532, 0.2323503462978457, 0.2222152242858694, 0.20277903900964492, 0.21350624722837458, 0.21030077931422525, 0.2063474596118765, 0.17723644655080062, 0.17701551642710467, 0.17350328781359534, 0.15587595021847098, 0.1206633192764281, 0.08003396247107862, 0.11465795231304864, 0.40853076448228615, 0.39857737044055375, 0.3954370658315271, 0.3701762851895129, 0.40582220689569004, 0.4112215051961454, 0.4119156913899741, 0.4091458546560532, 0.41741665974499903, 0.41632445329008505, 0.4062993126190975, 0.3961260266173503, 0.5235876856354138, 0.6859275261487112, 0.12069837645505994, 0.18295731351225808, 0.23725205284832027, 0.22613569451905488, 0.2019521019139661, 0.22145972621323037, 0.21971370985761393, 0.21912855081125826, 0.19276593800674047, 0.1967295240832836, 0.20940641356967038, 0.18659543422497282, 0.1793175878560991, 0.10676911340011466, 0.2311075735582041, 0.40893185184193465, 0.3956003956374374, 0.390726607206261, 0.35880180618875807, 0.387731455532304, 0.39643665202080536, 0.38740873210912674, 0.36642898313528316, 0.37564425995769574, 0.3573196068960175, 0.3504447286240366, 0.32664007585899646, 0.4881348164162055, 0.522613551882201, 0.14797495709347927, 0.1947583252853278, 0.25409395388806727, 0.24449324042590675, 0.22273787042162244, 0.2478821922745489, 0.24869305254757637, 0.2562958530421789, 0.23801442907641854, 0.2431792684325697, 0.2487837187235682, 0.2506371934690242, 0.2526963563125764, 0.20591191538696393, 0.22520555102130038, 0.4114461949234872, 0.385543907736569, 0.3741445694257067, 0.3404346078360416, 0.35767009443714676, 0.37125425035755905, 0.3544946692052875, 0.32580781044982715, 0.33741277583222734, 0.31518919342301993, 0.30605264314251107, 0.2930063634118553, 0.43601912844856, 0.46282543382709024, 0.17629525882231076, 0.2109073155334745, 0.2756762590997539, 0.2707714421298488, 0.2562246318700013, 0.2793963518071046, 0.2804431067378389, 0.29452127872123063, 0.2810631790190427, 0.2843602791990662, 0.2903779490070661, 0.300410717086578, 0.28693399859007057, 0.286174229288529, 0.24207817121253772, 0.41534560589221525, 0.37676426644452904, 0.354220446220701, 0.3199597637283346, 0.32723050441106566, 0.3441996467364729, 0.323750387232895, 0.3056444074006776, 0.31099632840540514, 0.29092093996832064, 0.28743180493074477, 0.27561347962202654, 0.3811194731545091, 0.42540007753817527, 0.19715864935327088, 0.2273417037375981, 0.2969541635311394, 0.2983238244433759, 0.291682734300511, 0.3061498997218876, 0.30600532048495593, 0.32003999473937134, 0.30901003531899107, 0.31005202114432967, 0.31939951968335484, 0.32560870675385795, 0.2968643986471498, 0.29965485737768194, 0.261057443819162, 0.4136633136223579, 0.36989315555873964, 0.3355423181043377, 0.30244193285039317, 0.302054865414515, 0.31985899687292396, 0.30014112761557427, 0.29733265377858936, 0.2968251998180876, 0.2777743101756983, 0.2812321140465705, 0.26949441525986456, 0.35425488780039466, 0.4463669320618971, 0.208934999676443, 0.2418454951158848, 0.31506967610121345, 0.32256632662265977, 0.321771154379956, 0.32577080560091426, 0.32340586960753376, 0.33396216716773375, 0.32308726147372346, 0.324005241325878, 0.3335455580336163, 0.33982850021324373, 0.3066658737412307, 0.28865311011212236, 0.2656750898572468, 0.40060107317349486, 0.36256816629646244, 0.31928864220063224, 0.28924082985015437, 0.28162786283393254, 0.2988084223390073, 0.2835030390745274, 0.2879258431241529, 0.2878767333534815, 0.27195332571740144, 0.2799160736692813, 0.27351338875288184, 0.3506919666892225, 0.4401760880081404, 0.2151676860651577, 0.2539008219013325, 0.32868860897657387, 0.34083557988481084, 0.34382742826827367, 0.33901386509041104, 0.3353199632376407, 0.34334888117584556, 0.32994100527808334, 0.3318499481550958, 0.3402459448841557, 0.3412399149971917, 0.30277789718399256, 0.23520821382953222, 0.27534168016027827, 0.37938373304506706, 0.35268155516926475, 0.30471774433547344, 0.27636079607843206, 0.2625370223538512, 0.2807884631631905, 0.27338582415727963, 0.27566628084179007, 0.2799150473561269, 0.2690816474706707, 0.2822599377044988, 0.2789990999118148, 0.35499303505343555, 0.32581911370577726, 0.22076696494511436, 0.2646660311162457, 0.3380945875284563, 0.352173887348876, 0.35863071678785025, 0.3486878840246134, 0.34452057707892825, 0.3528991471290626, 0.3354678978362602, 0.3368340014666875, 0.3432251584084118, 0.33529214533913154, 0.29618583965136186, 0.29001340052144947, 0.29290684020236646, 0.3560192606448399, 0.3376050039043222, 0.2892484462366162, 0.2576567825336538, 0.24379640459386556, 0.26440225988283567, 0.2607099156690333, 0.2665065917381035, 0.2724307435096556, 0.26426649502982974, 0.2786220196405153, 0.27683021709997396, 0.3654167432335693, 0.3615107194838955, 0.23045254667397777, 0.275636658598576, 0.34474103751717683, 0.3572334986871724, 0.36802466284204605, 0.3567789690437263, 0.35382602269816177, 0.36219641083435783, 0.34264315019072855, 0.3414667441090596, 0.34605847216080576, 0.3405904418244499, 0.28013305638023167, 0.22506722521961137, 0.3214718260156957, 0.33100258731278864, 0.3169701058373666, 0.2737361843279168, 0.2338282995921378, 0.22668563073558348, 0.2459344628296227, 0.24584089595090958, 0.2563765591356851, 0.26519998291262675, 0.25576313649967736, 0.2645351191099721, 0.27096579024508566, 0.3884026615996065, 0.6074940469513951, 0.24615366800739213, 0.2872792714383652, 0.3492825499574183, 0.3575829932095615, 0.3722907613841213, 0.3630966244318541, 0.36318274320415617, 0.3703720428802415, 0.35153200490577385, 0.34896552333656666, 0.3541038393354117, 0.3496083448017134, 0.24515182054008108, 0.24474234841567488, 0.3665391271995121, 0.3044057865949263, 0.2984996688796429, 0.26011808437262557, 0.21297387987891025, 0.21171799281070247, 0.22099518096454315, 0.22291250042106012, 0.231318145730719, 0.2438827401768577, 0.23807390795030778, 0.24861044874082605, 0.27127611376700067, 0.4250529543601268, 0.558815215303747, 0.2657547881304269, 0.29907199200049556, 0.3503976796257039, 0.3537812466585138, 0.36971701989450145, 0.36447602019331987, 0.36898448678611123, 0.3770856797553506, 0.361538926700862, 0.358415621473682, 0.36158687268206785, 0.3581416290883399, 0.21848928072303658, 0.194260901941678, 0.4345262367690117, 0.28362554117079974, 0.2914007265459048, 0.25569844103224076, 0.20760823999774292, 0.19664099756811873, 0.18560683218402121, 0.1882057428042038, 0.18303606782567403, 0.183912444164438, 0.18005659335219792, 0.19812088793587176, 0.2161090878944533, 0.39441453125613135, 0.2541705175166248, 0.2847473055466059, 0.3076206224766549, 0.34529016700556836, 0.34487160132377104, 0.3583509115548156, 0.3575924820826162, 0.3673801092478755, 0.379776505342875, 0.37032490102099014, 0.3674342843119735, 0.36861648426954496, 0.3625706594303393, 0.1205263719317559, 0.20492267521426516, 0.5813263171239735, 0.32318342107970816, 0.3431405095123135, 0.3139203486685283, 0.27079527608719106, 0.241137208259211, 0.2186958703596648, 0.22377205606373093, 0.2139436590205353, 0.19537890517976197, 0.18739231293584166, 0.1690850326562091, 0.1639877288153623, 0.31162028215836574, 0.31089352067627885, 0.2972983366523574, 0.30819843072207925, 0.33006637659391225, 0.3290366440816072, 0.33725536646157656, 0.33979381593031704, 0.3501575620057738, 0.3645660474169787, 0.3594755130060068, 0.3617507875782994, 0.3756600132458558, 0.37714315835911094, 0.08436077868446627, 0.0721918431057335, 0.7745544376227683]
    #global best_initial_params = [0.4895466456248841, 0.4384670305651621, 0.4431367595544628, 0.47728540473349307, 0.4827566604571561, 0.5208153437246509, 0.5305771052446253, 0.5980419679126784, 0.6059232548027181, 0.666514508257541, 0.7069129839686353, 0.8048447400011718, 0.5865519465043092, 0.5953082547729804, 0.17747620216350068, 0.19518511470754038, 0.2688625793337106, 0.2510224963336011, 0.23170645438845594, 0.2920144560926135, 0.29131340668746153, 0.35814192359724467, 0.36699916118102016, 0.35347151012092815, 0.3184967299735391, 0.3059842138597802, 0.5585743411689645, 0.48723809878137403, 0.06507221205222613, 0.4524502898279842, 0.4408858361994276, 0.4585855118863406, 0.4823080708653359, 0.4897429029678398, 0.5275234894890702, 0.5512150207083111, 0.5993873065013339, 0.646977931380249, 0.6601657636079209, 0.6478259787966606, 0.6573705607290349, 0.7131951120161912, 0.7848657134596201, 0.06785944832175159, 0.13284123579822452, 0.19847580344557414, 0.17154422027705463, 0.13792089199052204, 0.17905535486369215, 0.15576056207023667, 0.16902989004279334, 0.16136764100080314, 0.11903893105281135, 0.10953750217817414, 0.0835380404909163, 0.018940830637892175, 0.10887673537056129, -0.04504414796819284, 0.44335824865870466, 0.4653461740935022, 0.4789236161379636, 0.4988161811585756, 0.5150188340370933, 0.5339246663534076, 0.526670478224048, 0.5272389157322472, 0.5140998077998882, 0.48492791079971853, 0.4776979569006699, 0.41252913053232476, 0.42130478324137016, 0.4226040945466954, 0.08782150152106168, 0.1317447825607283, 0.1796605481418786, 0.1691343556577962, 0.12815354659364625, 0.17886460250925043, 0.1475509296007044, 0.16521359197820476, 0.1424286390161136, 0.15023853915355903, 0.12846624042980376, 0.1573729310711869, 0.24027153384842662, 0.2136984272388859, 0.14734977308098832, 0.45090845520315737, 0.46019166861724825, 0.44273391116094096, 0.4600394553037952, 0.46003956689853487, 0.4613570891786321, 0.4552518424151466, 0.41419954291830374, 0.3729618992302667, 0.37138723977943494, 0.36182484117837754, 0.3414168550366697, 0.3338041596326575, 0.41507058377234146, 0.1457968068188968, 0.1738565541763771, 0.21551669149491537, 0.21692730743369995, 0.18962698210304402, 0.2544781011288362, 0.23311435143846723, 0.2560574683131592, 0.2539873364321711, 0.2583242495540613, 0.2600447958567144, 0.2929788565371539, 0.3771315054031394, 0.33099037849914453, 0.10685948018446345, 0.45758403598943387, 0.443700948197979, 0.40344686421959836, 0.3945548152445536, 0.4152719695508958, 0.3983904203297687, 0.3906049605658598, 0.3524599262654084, 0.32135015743948253, 0.325967564953153, 0.31575207487482965, 0.3163577949712674, 0.3345088647822334, 0.3576884838979428, 0.19445559666594867, 0.22671270098295085, 0.2628519708958623, 0.2657198884063131, 0.25321099000874164, 0.31739259139375914, 0.301624850330171, 0.31666113338639684, 0.3223031189615711, 0.3209627268198969, 0.3228345118626268, 0.33868999427090535, 0.36721150724185037, 0.41589324489187945, 0.1564519054896714, 0.4481525032853977, 0.41485061481187524, 0.37697457088066455, 0.3533571746130903, 0.38073277147228907, 0.3796210583946519, 0.36444518887078226, 0.3420337030400447, 0.32254123073632707, 0.3147584241499998, 0.3080567178586691, 0.30351205679163173, 0.35870667323488725, 0.31939792393081307, 0.22361253743456186, 0.2670905191739581, 0.2985019352579669, 0.3018710025156964, 0.2908575174188388, 0.3353072454683996, 0.3230781379098033, 0.3353166774872035, 0.34066451362284467, 0.3333648393558803, 0.3315576176767335, 0.3316141565451462, 0.32919499590414736, 0.3836344804776443, 0.1672617886954413, 0.44570231571673913, 0.3981644108335444, 0.36559355153198214, 0.34317924692669516, 0.36884696753168106, 0.3865434124906887, 0.3466331771873497, 0.3316659463299091, 0.316540450854717, 0.30653070013149314, 0.3085115982934536, 0.3046333218067648, 0.36264734049267305, 0.31407226851685527, 0.2454410716254533, 0.2858031253753911, 0.3175245339542841, 0.3210080196462642, 0.30808833004133224, 0.33218039335288296, 0.320651714620507, 0.33295216634690916, 0.33936957515191735, 0.33407721645198046, 0.33316597278117094, 0.3349347268319675, 0.35781800333353575, 0.37295765382649193, 0.17786098758629765, 0.4430211813607694, 0.4111647359191647, 0.3661977313394238, 0.34330543893549526, 0.3478864652359846, 0.35151697122367126, 0.34375691691066834, 0.32309135080598195, 0.3117194053078652, 0.3087983553057075, 0.31052463757154986, 0.30126899187791173, 0.33050328692667874, 0.316265539553369, 0.264488724326334, 0.2975818226357632, 0.3240591529894031, 0.33128759766294985, 0.31278551526238063, 0.32682018363552906, 0.3150498405063971, 0.3334848330058792, 0.3331969687323694, 0.3317802782244742, 0.3285714607663164, 0.3196091204230385, 0.3451817042859549, 0.33398472664964096, 0.20354408641757968, 0.42685138567670533, 0.4133863790475306, 0.36240539377217407, 0.3485734405917029, 0.34465872265400743, 0.33509372071893034, 0.3335096623732597, 0.31669910691104525, 0.31712176098954753, 0.3079123114182068, 0.30711270336216817, 0.2995885387047253, 0.31687652914754516, 0.32132570901840013, 0.26888673679117003, 0.30265736243980973, 0.3258248041692684, 0.33133595407762634, 0.3139950181042966, 0.3232550663759964, 0.3133587181382648, 0.3365104702423761, 0.33143226573678264, 0.3241509146063564, 0.33240602500078353, 0.3299658489433455, 0.3461814469439817, 0.34199144188588676, 0.21737216845258447, 0.40129612691830635, 0.40845042856564356, 0.3585168853642202, 0.3441320350214027, 0.33327403199673306, 0.3328367449111271, 0.3151736474260218, 0.30777167361928554, 0.31907825147101226, 0.30624813797545863, 0.3088434233590575, 0.303108759480462, 0.3111712354552139, 0.30526673161097007, 0.26062347730517377, 0.30243718998439567, 0.32725254244550234, 0.3254916475063081, 0.3153596462699224, 0.3244295457314093, 0.31602215357736435, 0.341792289095281, 0.32845216904023283, 0.3180172733072623, 0.3234568181638124, 0.32433003766911694, 0.34900614224606585, 0.34434998142914536, 0.24299680085766792, 0.3813550578967672, 0.3948430377878794, 0.3436616680638639, 0.3301785674767826, 0.3110513938472153, 0.3090748296464807, 0.30991399433372946, 0.2988327088142952, 0.32731121466301966, 0.3063086460468653, 0.3092734308988056, 0.295480082077681, 0.3021600822281487, 0.2980424407974466, 0.2670776142892467, 0.30429466335741356, 0.32903757400942313, 0.3249024475602522, 0.31999983484255523, 0.32658263898994727, 0.31967043186523764, 0.3438631424365427, 0.3277216640064821, 0.31642474154759587, 0.32377827619931004, 0.32906941771325343, 0.34511090463855504, 0.3373202012678935, 0.2670687878914716, 0.3471196225999194, 0.35114987748601867, 0.30763930208742746, 0.28948006084859007, 0.29257481041224365, 0.29132851159494455, 0.3100360244069944, 0.3073332819219448, 0.31842364592234423, 0.3063438485822769, 0.31247842288091077, 0.30104919582708073, 0.3147447933063575, 0.2999753670422409, 0.2833389008946987, 0.309350786782062, 0.3339070383808434, 0.33544705960731436, 0.3331114745859977, 0.33108094905607033, 0.32599653293634395, 0.34322843185408664, 0.32745268538368627, 0.32032873589454874, 0.3185644264900458, 0.3302140967857906, 0.3333073141798706, 0.3416641113139692, 0.3020809439208421, 0.31058385394233307, 0.3135426177414086, 0.2670579132085077, 0.25894208338856045, 0.2671360595370632, 0.2654272601906452, 0.3064008097017918, 0.29957124887705083, 0.3063150383407742, 0.2943168570581491, 0.3001699356348437, 0.2967801578063031, 0.3269816308445408, 0.2967890371403758, 0.30322921832329935, 0.31616304020843644, 0.34077241139289804, 0.34865512410875543, 0.352782190407247, 0.3412328481595494, 0.33982763662710924, 0.3420778201905607, 0.33156574062614647, 0.3307297328933458, 0.3249334203341973, 0.3333247452466423, 0.3189389194420359, 0.3427426782469234, 0.3345547798933169, 0.27816457276128415, 0.29308692399950653, 0.23978721202070105, 0.24325729588086958, 0.23949746023207294, 0.22470475098681678, 0.2499346941511253, 0.24520350934868732, 0.25873837840175196, 0.26459355994920875, 0.27219927087182333, 0.28159631088817594, 0.35174543937802455, 0.32641139600863583, 0.31972938876537116, 0.32187740325959885, 0.3483524421016398, 0.3587901083190912, 0.36767486011516604, 0.35775469546225047, 0.3581309982502534, 0.35788309706752375, 0.3490724293044398, 0.34963320619248855, 0.34869867036394736, 0.360887939015226, 0.2699447805694923, 0.29181926607871533, 0.39860833186360156, 0.27365422636683684, 0.30799934183303174, 0.2780566890289578, 0.264179947409819, 0.23545132091846074, 0.2047645291962326, 0.19855129642792607, 0.19710490572065706, 0.1767458210464702, 0.16831130435812575, 0.15693940009585103, 0.15048058997587632, 0.25840936819682914, 0.2535180359870202, 0.32836213060411984, 0.3197581251192747, 0.3436916083850125, 0.35371439836545443, 0.3595675734938481, 0.3577131409676752, 0.36776942918897526, 0.37702434804985996, 0.37409847628010573, 0.38113331397943717, 0.3595207964241184, 0.33220271115661154, 0.1546386042061453, 0.16154154179882077, 0.5492357733507164]

    # partly optimized N 16
    #global best_initial_params = [0.4895466456248841, 0.43846703056516195, 0.4431367595544628, 0.47728540473349307, 0.482756660457156, 0.52081534372465, 0.5305771052446248, 0.5980419679126784, 0.6059232548027181, 0.6665145082575417, 0.7069129839686353, 0.8048447400011725, 0.5849844973519471, 0.586678581040267, 0.4455913711733674, 0.41136387501610405, 0.1774762021635006, 0.19518511470754027, 0.2688625793337103, 0.2510224963336008, 0.23170645438845575, 0.2920144560926128, 0.29131340668746125, 0.35814192359724467, 0.36699916118102033, 0.3534715101209284, 0.3184967299735391, 0.3059842138597802, 0.5650244480598571, 0.4702567797106861, 0.7866208923511142, 0.8203742489690352, 0.06507221205222623, 0.45245028982798435, 0.4408858361994276, 0.4585855118863406, 0.4823080708653364, 0.48974290296784045, 0.5275234894890702, 0.551215020708312, 0.5993873065013345, 0.646977931380249, 0.6601657636079209, 0.6478259787966606, 0.6573705607290349, 0.7158391121933019, 0.7953646989052605, 0.8472026519452213, 0.8965391063304652, 0.0678594483217516, 0.13284123579822452, 0.19847580344557403, 0.17154422027705443, 0.13792089199052182, 0.17905535486369215, 0.1557605620702365, 0.16902989004279334, 0.16136764100080295, 0.11903893105281148, 0.10953750217817414, 0.0835380404909163, 0.008202451203040521, 0.1143730082489962, 0.0834899847776623, 0.057371094430849645, -0.045044147968192796, 0.44335824865870427, 0.4653461740935025, 0.47892361613796375, 0.4988161811585746, 0.5150188340370933, 0.5339246663534071, 0.526670478224048, 0.5272389157322478, 0.5140998077998874, 0.48492791079971903, 0.4776979569006699, 0.4125291305323251, 0.4225630162847886, 0.42155880643743876, 0.4380582238685403, 0.4608674636156209, 0.0878215015210617, 0.1317447825607285, 0.17966054814187868, 0.1691343556577962, 0.1281535465936461, 0.17886460250925043, 0.1475509296007046, 0.16521359197820476, 0.1424286390161136, 0.15023853915355903, 0.12846624042980362, 0.1573729310711869, 0.2396282477397235, 0.20148608625601117, 0.22872094456285996, 0.22281288139035751, 0.14734977308098796, 0.4509084552031572, 0.46019166861724864, 0.44273391116094074, 0.4600394553037948, 0.46003956689853526, 0.461357089178632, 0.4552518424151463, 0.414199542918304, 0.3729618992302665, 0.37138723977943466, 0.3618248411783779, 0.3414168550366697, 0.3295983674605372, 0.420186064164718, 0.4562553291446148, 0.4632711820446578, 0.1457968068188968, 0.17385655417637705, 0.21551669149491556, 0.21692730743369995, 0.18962698210304418, 0.2544781011288358, 0.2331143514384673, 0.2560574683131592, 0.25398733643217136, 0.258324249554061, 0.2600447958567144, 0.2929788565371539, 0.3821516001244868, 0.3381819658703871, 0.3782724628741281, 0.37502302368910256, 0.1068594801844634, 0.45758403598943426, 0.4437009481979786, 0.40344686421959836, 0.3945548152445539, 0.4152719695508956, 0.3983904203297684, 0.3906049605658595, 0.35245992626540806, 0.32135015743948253, 0.325967564953153, 0.31575207487482965, 0.3163577949712674, 0.3278040743702348, 0.3599975078372398, 0.38055248340229214, 0.3972213038242432, 0.19445559666594864, 0.22671270098295085, 0.2628519708958627, 0.26571988840631283, 0.2532109900087424, 0.3173925913937588, 0.301624850330171, 0.31666113338639684, 0.3223031189615711, 0.3209627268198965, 0.3228345118626272, 0.33868999427090474, 0.3673133834374246, 0.41863659393864067, 0.4582222573984177, 0.41762084526727933, 0.1564519054896714, 0.4481525032853975, 0.4148506148118755, 0.3769745708806649, 0.3533571746130905, 0.38073277147228884, 0.3796210583946518, 0.3644451888707821, 0.3420337030400447, 0.32254123073632707, 0.3147584241499998, 0.3080567178586691, 0.30351205679163207, 0.34904653887634784, 0.320216122241767, 0.34126668242310987, 0.36256629195165424, 0.22361253743456186, 0.2670905191739585, 0.2985019352579669, 0.3018710025156964, 0.2908575174188392, 0.3353072454683996, 0.3230781379098033, 0.3353166774872032, 0.3406645136228444, 0.3333648393558803, 0.33155761767673314, 0.33161415654514653, 0.33070978921220456, 0.3782304956068706, 0.4066293782248291, 0.3901123803521111, 0.1672617886954413, 0.44570231571673896, 0.3981644108335444, 0.3655935515319822, 0.34317924692669516, 0.36884696753168106, 0.3865434124906884, 0.3466331771873498, 0.3316659463299094, 0.316540450854717, 0.3065307001314928, 0.30851159829345326, 0.3046333218067651, 0.35837211832059457, 0.31606664313369204, 0.3308083633586717, 0.3305162868326037, 0.24544107162545356, 0.2858031253753914, 0.3175245339542841, 0.3210080196462642, 0.30808833004133257, 0.3321803933528823, 0.3206517146205066, 0.33295216634690983, 0.339369575151917, 0.33407721645198046, 0.3331659727811706, 0.3349347268319675, 0.355868734909776, 0.36665303973642926, 0.40134643196439895, 0.3878557879234769, 0.17786098758629776, 0.4430211813607698, 0.411164735919165, 0.3661977313394235, 0.3433054389354951, 0.3478864652359844, 0.35151697122367087, 0.3437569169106678, 0.3230913508059816, 0.3117194053078655, 0.3087983553057078, 0.3105246375715502, 0.30126899187791173, 0.32681553252457, 0.3177377910683568, 0.3165962550651612, 0.31931273716711467, 0.264488724326334, 0.2975818226357632, 0.32405915298940274, 0.33128759766294985, 0.31278551526238024, 0.3268201836355294, 0.3150498405063971, 0.3334848330058795, 0.33319696873236976, 0.33178027822447453, 0.3285714607663161, 0.3196091204230385, 0.3456207891593944, 0.3306354337104986, 0.3738800212982206, 0.35643886866134544, 0.20354408641757968, 0.4268513856767057, 0.41338637904753034, 0.3624053937721742, 0.3485734405917031, 0.3446587226540071, 0.33509372071893034, 0.3335096623732597, 0.31669910691104525, 0.3171217609895472, 0.3079123114182068, 0.3071127033621685, 0.2995885387047253, 0.3113146651755192, 0.32499956876621366, 0.31750981123225425, 0.3246985288194668, 0.2688867367911704, 0.30265736243980973, 0.3258248041692688, 0.33133595407762667, 0.3139950181042969, 0.32325506637599605, 0.3133587181382645, 0.3365104702423768, 0.33143226573678297, 0.3241509146063564, 0.33240602500078287, 0.3299658489433455, 0.3447578547720451, 0.3369990077137075, 0.3617499804091171, 0.3523656464877882, 0.21737216845258447, 0.401296126918306, 0.40845042856564356, 0.35851688536422033, 0.3441320350214027, 0.33327403199673333, 0.33283674491112697, 0.3151736474260218, 0.30777167361928554, 0.31907825147101226, 0.30624813797545863, 0.3088434233590575, 0.3031087594804624, 0.30703908946314845, 0.30880470296747126, 0.3131060051714655, 0.3094567131675398, 0.2606234773051738, 0.30243718998439567, 0.327252542445503, 0.3254916475063077, 0.315359646269922, 0.324429545731409, 0.31602215357736435, 0.341792289095281, 0.32845216904023283, 0.3180172733072623, 0.3234568181638124, 0.32433003766911733, 0.34743365233935863, 0.3409239781184317, 0.35236926980653516, 0.3541858730213472, 0.24299680085766792, 0.38135505789676694, 0.3948430377878794, 0.34366166806386333, 0.33017856747678226, 0.3110513938472153, 0.3090748296464803, 0.30991399433372985, 0.2988327088142952, 0.32731121466301966, 0.3063086460468653, 0.3092734308988056, 0.295480082077681, 0.2960873061607321, 0.2989434610901106, 0.31087751562571364, 0.30414830630730694, 0.2670776142892459, 0.3042946633574139, 0.32903757400942285, 0.32490244756025183, 0.31999983484255523, 0.32658263898994727, 0.3196704318652373, 0.343863142436543, 0.3277216640064821, 0.3164247415475962, 0.3237782761993097, 0.3290694177132531, 0.344053076708989, 0.33784957680467903, 0.3507331353534674, 0.3511653390905206, 0.2670687878914713, 0.3471196225999194, 0.351149877486019, 0.3076393020874271, 0.2894800608485897, 0.29257481041224404, 0.2913285115949443, 0.310036024406994, 0.30733328192194515, 0.31842364592234423, 0.30634384858227653, 0.31247842288091116, 0.30104919582708, 0.31249124404702133, 0.3004518226494007, 0.3195490048894413, 0.31106472415503944, 0.28333890089469826, 0.309350786782062, 0.3339070383808434, 0.3354470596073147, 0.3331114745859977, 0.33108094905606966, 0.32599653293634395, 0.34322843185408664, 0.3274526853836866, 0.32032873589454874, 0.3185644264900454, 0.3302140967857913, 0.3319481169936446, 0.34107618661568756, 0.3396932556705808, 0.338880170860162, 0.3020809439208421, 0.31058385394233307, 0.3135426177414083, 0.2670579132085074, 0.2589420833885609, 0.26713605953706243, 0.26542726019064494, 0.3064008097017918, 0.29957124887705083, 0.30631503834077384, 0.2943168570581491, 0.3001699356348444, 0.2967801578063031, 0.3241653758917736, 0.2978563425463178, 0.338653147323471, 0.33762768953164135, 0.303229218323299, 0.3161630402084368, 0.3407724113928979, 0.34865512410875577, 0.35278219040724684, 0.3412328481595494, 0.3398276366271095, 0.3420778201905606, 0.33156574062614647, 0.3307297328933458, 0.3249334203341973, 0.3333247452466423, 0.3212053753489394, 0.3390855923297127, 0.3125027392974482, 0.31312802583219684, 0.3345547798933169, 0.2781645727612841, 0.2930869239995068, 0.2397872120207011, 0.24325729588086983, 0.23949746023207294, 0.22470475098681678, 0.24993469415112554, 0.24520350934868765, 0.2587383784017519, 0.26459355994920847, 0.27219927087182333, 0.281596310888176, 0.34861656142507763, 0.325766423577484, 0.37643735830658004, 0.3644448555966677, 0.31972938876537077, 0.32187740325959885, 0.3483524421016394, 0.35879010831909136, 0.36767486011516587, 0.3577546954622507, 0.35813099825025324, 0.35788309706752386, 0.34907242930443966, 0.34963320619248867, 0.34869867036394775, 0.36088793901522565, 0.2730439557245007, 0.2867948065806052, 0.23339294026568827, 0.2211071052926918, 0.39860833186360184, 0.27365422636683684, 0.30799934183303174, 0.2780566890289578, 0.2641799474098186, 0.23545132091846097, 0.2047645291962326, 0.19855129642792593, 0.19710490572065706, 0.17674582104647027, 0.16831130435812558, 0.15693940009585103, 0.15048058997587613, 0.2556499330506415, 0.25189232461242356, 0.29098821866388425, 0.27534851265923876, 0.32836213060411984, 0.3197581251192751, 0.3436916083850119, 0.35371439836545443, 0.3595675734938481, 0.3577131409676752, 0.3677694291889751, 0.3770243480498603, 0.3740984762801059, 0.38113331397943717, 0.35952079642411805, 0.33220271115661154, 0.158837009965215, 0.16038815142681184, 0.10740022785592121, 0.09311109224845807, 0.5492357733507164]


    # partly optimized N 18
    #global best_initial_params =

     # average
    # best parameter n12
    #global best_initial_params = [0.38863651509521013, 0.3623825230976412, 0.360279559635785, 0.35910235771401244, 0.37153816855575816, 0.38539944186491637, 0.3983821463883338, 0.4160479827036452, 0.4159298709621052, 0.44215251119033133, 0.4903861223271826, 0.5275547236351206, 0.2110255615721192, 0.24308173725376744, 0.27045368414256915, 0.25784844656761136, 0.26615511754179166, 0.2870599815680632, 0.29081842597132357, 0.31074365697359235, 0.2906840227466885, 0.3219677272441083, 0.3185711908425937, 0.30308767160583444, 0.2020690315002596, 0.4155884528764367, 0.3816625454318228, 0.3732357674322053, 0.3731273424376277, 0.39538748364701115, 0.4089370379972387, 0.42490628387287893, 0.4440841324966561, 0.4511254808507511, 0.49012888165783136, 0.5218975542602547, 0.5420768182570563, 0.14200097216568927, 0.20400835571822035, 0.24426614675799382, 0.23446483780402974, 0.22669776863396987, 0.23814698655629954, 0.23742974462153646, 0.23875545852557895, 0.21394021126599594, 0.2239368119137631, 0.1905718539957704, 0.1533171344751806, -0.038716460597280754, 0.4119342541569938, 0.3898293978442212, 0.38489071986399653, 0.3747004951332479, 0.40622074875020714, 0.41198899066199823, 0.4261049116377578, 0.4376649391622323, 0.44863754824780294, 0.47249150699403936, 0.462718953983107, 0.47944002911179934, 0.11158079862286224, 0.18357365798345324, 0.23235034629784546, 0.22221522428586965, 0.20277903900964492, 0.21350624722837483, 0.21030077931422533, 0.20634745961187628, 0.17723644655080092, 0.1770155164271049, 0.17350328781359525, 0.15587595021847098, 0.1146579523130486, 0.408530764482286, 0.39857737044055375, 0.3954370658315271, 0.3701762851895129, 0.40582220689569, 0.411221505196145, 0.41191569138997425, 0.40914585465605335, 0.41741665974499903, 0.4163244532900849, 0.4062993126190977, 0.3961260266173504, 0.12069837645505986, 0.18295731351225833, 0.23725205284832043, 0.22613569451905483, 0.20195210191396598, 0.22145972621323037, 0.2197137098576137, 0.21912855081125826, 0.19276593800674072, 0.1967295240832836, 0.20940641356967013, 0.18659543422497257, 0.23110757355820394, 0.40893185184193453, 0.3956003956374372, 0.3907266072062606, 0.35880180618875807, 0.38773145553230415, 0.39643665202080536, 0.38740873210912663, 0.36642898313528316, 0.3756442599576959, 0.3573196068960175, 0.3504447286240366, 0.32664007585899585, 0.14797495709347916, 0.1947583252853278, 0.25409395388806755, 0.24449324042590614, 0.22273787042162266, 0.2478821922745491, 0.24869305254757637, 0.2562958530421791, 0.23801442907641848, 0.2431792684325691, 0.24878371872356803, 0.25063719346902397, 0.22520555102130022, 0.41144619492348733, 0.3855439077365695, 0.3741445694257067, 0.340434607836042, 0.3576700944371469, 0.37125425035755905, 0.3544946692052875, 0.3258078104498266, 0.3374127758322272, 0.31518919342301976, 0.30605264314251124, 0.29300636341185515, 0.17629525882231067, 0.21090731553347442, 0.2756762590997539, 0.2707714421298482, 0.2562246318700013, 0.27939635180710476, 0.2804431067378391, 0.29452127872123063, 0.28106317901904254, 0.284360279199066, 0.2903779490070659, 0.300410717086578, 0.24207817121253794, 0.41534560589221536, 0.3767642664445289, 0.3542204462207008, 0.3199597637283345, 0.32723050441106516, 0.3441996467364729, 0.323750387232895, 0.3056444074006776, 0.31099632840540464, 0.29092093996832086, 0.287431804930745, 0.27561347962202626, 0.19715864935327088, 0.22734170373759835, 0.2969541635311392, 0.29832382444337646, 0.2916827343005108, 0.30614989972188744, 0.3060053204849557, 0.3200399947393715, 0.30901003531899107, 0.3100520211443298, 0.31939951968335484, 0.3256087067538578, 0.2610574438191622, 0.41366331362235775, 0.36989315555873964, 0.33554231810433754, 0.3024419328503934, 0.3020548654145145, 0.31985899687292463, 0.30014112761557404, 0.2973326537785892, 0.2968251998180876, 0.27777431017569854, 0.28123211404657034, 0.2694944152598648, 0.208934999676443, 0.24184549511588455, 0.31506967610121334, 0.32256632662265994, 0.3217711543799562, 0.32577080560091426, 0.3234058696075339, 0.33396216716773425, 0.32308726147372285, 0.324005241325878, 0.3335455580336158, 0.3398285002132432, 0.26567508985724664, 0.4006010731734947, 0.3625681662964626, 0.3192886422006318, 0.28924082985015453, 0.2816278628339324, 0.2988084223390068, 0.2835030390745272, 0.2879258431241524, 0.287876733353481, 0.2719533257174016, 0.27991607366928145, 0.27351338875288184, 0.21516768606515776, 0.2539008219013323, 0.32868860897657387, 0.34083557988481145, 0.34382742826827384, 0.33901386509041104, 0.3353199632376407, 0.34334888117584556, 0.32994100527808323, 0.3318499481550956, 0.3402459448841553, 0.3412399149971915, 0.27534168016027843, 0.3793837330450669, 0.35268155516926475, 0.3047177443354736, 0.27636079607843206, 0.2625370223538514, 0.28078846316318995, 0.27338582415727936, 0.27566628084179007, 0.2799150473561269, 0.2690816474706707, 0.2822599377044988, 0.2789990999118154, 0.22076696494511436, 0.2646660311162459, 0.33809458752845634, 0.35217388734887645, 0.35863071678785025, 0.34868788402461326, 0.3445205770789282, 0.3528991471290626, 0.3354678978362608, 0.3368340014666875, 0.3432251584084116, 0.33529214533913093, 0.2929068402023659, 0.35601926064484, 0.33760500390432235, 0.2892484462366162, 0.2576567825336536, 0.2437964045938654, 0.2644022598828355, 0.26070991566903357, 0.26650659173810326, 0.2724307435096558, 0.26426649502982974, 0.2786220196405153, 0.27683021709997413, 0.23045254667397777, 0.27563665859857617, 0.3447410375171767, 0.3572334986871724, 0.3680246628420456, 0.3567789690437263, 0.35382602269816166, 0.3621964108343584, 0.34264315019072894, 0.3414667441090596, 0.34605847216080576, 0.3405904418244499, 0.3214718260156957, 0.33100258731278925, 0.3169701058373661, 0.2737361843279171, 0.23382829959213802, 0.22668563073558345, 0.24593446282962247, 0.2458408959509102, 0.2563765591356857, 0.26519998291262653, 0.2557631364996776, 0.2645351191099723, 0.2709657902450855, 0.24615366800739236, 0.2872792714383657, 0.3492825499574183, 0.3575829932095615, 0.3722907613841208, 0.36309662443185353, 0.36318274320415633, 0.37037204288024206, 0.35153200490577385, 0.3489655233365665, 0.3541038393354118, 0.3496083448017134, 0.36653912719951215, 0.30440578659492606, 0.2984996688796431, 0.2601180843726258, 0.21297387987891042, 0.21171799281070264, 0.22099518096454315, 0.22291250042106012, 0.23131814573071907, 0.24388274017685765, 0.23807390795030778, 0.24861044874082583, 0.2712761137670004, 0.2657547881304271, 0.2990719920004954, 0.3503976796257039, 0.3537812466585138, 0.36971701989450095, 0.3644760201933199, 0.36898448678611123, 0.3770856797553506, 0.36153892670086185, 0.35841562147368144, 0.3615868726820677, 0.3581416290883399, 0.43452623676901175, 0.2836255411708003, 0.2914007265459046, 0.25569844103224076, 0.2076082399977427, 0.19664099756811879, 0.18560683218402121, 0.1882057428042036, 0.18303606782567405, 0.18391244416443808, 0.1800565933521977, 0.19812088793587168, 0.2161090878944534, 0.28474730554660527, 0.3076206224766543, 0.3452901670055683, 0.34487160132377104, 0.358350911554816, 0.3575924820826166, 0.3673801092478756, 0.37977650534287555, 0.37032490102099014, 0.36743428431197367, 0.3686164842695455, 0.3625706594303387, 0.5813263171239725, 0.323183421079708, 0.3431405095123137, 0.3139203486685283, 0.27079527608719084, 0.2411372082592112, 0.21869587035966503, 0.22377205606373093, 0.21394365902053505, 0.19537890517976172, 0.1873923129358416, 0.16908503265620883, 0.1639877288153623, 0.2972983366523579, 0.3081984307220791, 0.33006637659391275, 0.329036644081607, 0.33725536646157656, 0.3397938159303169, 0.3501575620057738, 0.3645660474169787, 0.3594755130060068, 0.3617507875782996, 0.37566001324585563, 0.37714315835911094, 0.7745544376227683]

    
    # for higher N
    #initial_params_n = expand_blocks(best_initial_params, N-2)

    #global best_initial_params = copy(initial_params_n)
    

#############################
    
"""
    add_params = zeros(2)
    n_iter_p1 = 5
    n_iter_p2 = 5

    max_p1 = 0.8
    min_p1 = 0.3
    max_p2 = 0.8
    min_p2 = 0.3


    for i in 1: n_iter_p1

        p1 = (min_p1 + (i-1)*(max_p1-min_p1)/n_iter_p1)
        p1 = round(p1, digits=1)
        for j in 1: n_iter_p2

            p2 = (min_p2 + (j-1)*(max_p2-min_p2)/n_iter_p2)
            p2 = round(p2, digits=1)
            add_params_local = vcat(p1, p2)
            println(add_params_local)
            initial_params = expand_blocks_2(best_initial_params, add_params_local, N-2)
            #println(initial_params)
            cost, params, probs = optimize_parameters_mix(MAX_problem, initial_params, niter=niter, learning_rate=learning_rate)
            println(cost)
            if abs(cost) > abs(best_cost)
                global best_cost = cost
                global best_params = params
                global _params = initial_params
                add_params = add_params_local
                #global best_probs = probs
            end

        end

    end

    println(add_params)
    print(best_cost)

#############################

    global best_initial_params = replace_blocks(_params, best_params, N)
"""

#############################

    """
    # for higher N
    initial_params_n = expand_blocks(best_initial_params, N-2)

    global best_initial_params = copy(initial_params_n)
    
    cost, params, probs = optimize_parameters_mix(MAX_problem, best_initial_params, niter=niter, learning_rate=learning_rate)

    println(cost)


    global best_initial_params = replace_blocks(best_initial_params, params, N)


    niter = 100  
    global learning_rate = 0.001
    

    for j in 1:1

        cost, params, probs = optimize_parameters_mix_two(MAX_problem, best_initial_params, niter=niter, learning_rate=learning_rate)
        #println("x")
        #println(size(params))
        if abs(cost) > abs(best_cost)
            global best_cost = cost
            global best_params = params
            #global best_initial_params = initial_params
            global best_lr = learning_rate
            global best_probs = probs
        else
            break
        end

        global learning_rate += 0.004

    end


    for i in 1:1

        cost, params, probs = optimize_parameters_mix_two(MAX_problem, best_initial_params, niter=niter, learning_rate=learning_rate)
        
        if abs(cost) > abs(best_cost)
            global best_cost = cost
            global best_params = params
            #global best_initial_params = initial_params
            global best_lr = learning_rate
            global best_probs = probs
        else
            break
        end

        global learning_rate += 0.1

    end
    """

    # one big increase step for learning rate
    global learning_rate = 0.1
    niter = 0
    
    cost, params, probs = optimize_parameters_mix_two(MAX_problem, best_initial_params, niter=niter, learning_rate=learning_rate)
        
    if abs(cost) > abs(best_cost)
        global best_cost = cost
        global best_params = params
        #global best_initial_params = initial_params
        global best_lr = learning_rate
        global best_probs = probs
    end
    

    ### using final optimized parameter without sperate optimization process for each instance



    println("Optimal cost: ", best_cost)
    println("Optimal initial parameter: ", best_initial_params[1])
    println("Optimal parameter: ", best_params[1:33])
    println(best_lr)

    
    # save the optimal parameters and cost

    PATH_w = raw"/home/ubuntu/aqc_VQE"

    #folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data//N_%i//p%i//n12_parameter_opt_data//", N, p);
    #folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data//N_%i//p%i//n12_parameter_test_data//", N, p);
    #folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data//N_%i//p%i//n12_raw_parameter_test_data//", N, p);

    #folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data//N_%i//p%i//n14_parameter_opt_data//", N, p);
    folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data//N_%i//p%i//n14_parameter_test_data_random//", N, p);
    #folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data//N_%i//p%i//n14_raw_parameter_test_data//", N, p);


    #folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data_full_fix_time//N_%i//p%i//n12_parameter_opt_data2//", N, p);
    #folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data_full_fix_time//N_%i//p%i//n12_parameter_test_data//", N, p);
    #folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data_full_fix_time//N_%i//p%i//n12_raw_parameter_test_data//", N, p);
    
    #folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data_full_fix_time//N_%i//p%i//n14_parameter_opt_data2//", N, p);
    #folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data_full_fix_time//N_%i//p%i//n14_parameter_test_data//", N, p);
    #folder_name_w = PATH_w * @sprintf("//vqe_MAX2SAT_data_full_fix_time//N_%i//p%i//n14_raw_parameter_test_data//", N, p);


    h5open(folder_name_w * @sprintf("optimized_MAX2SAT_instance_N_%i_idx_%04i.h5", N, idx), "w") do file
        write(file, "ground_state_energy", gs_energy)           
        write(file, "idx", idx)                               # Save seed
        write(file, "cost_value", best_cost)                    # Save cost values
        write(file, "parameter_angles", best_params)            # Save parameters
        write(file, "initial_parameters", best_initial_params)  # Save initial parameters
        write(file, "learning_rate", best_lr)                   # Save learning rate
        write(file, "probabilities", best_probs)                # Save probs
    end
        
end 

println("============================================================ N = ", N, ", ", total_num_inst," instances, done! ============================================================")
