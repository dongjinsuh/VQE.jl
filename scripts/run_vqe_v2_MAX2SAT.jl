using HDF5 
using Printf
using LinearAlgebra
using DataFrames
import Random, Distributions

using VQE
using Zygote
using PyPlot
using Parameters
using NLopt
using DocStringExtensions
using OrdinaryDiffEq
#using Yao
using YaoBlocks, ChainRulesCore


function expand_blocks_v2(arr::Vector{T}, n::Int) where T
    # Compute block size dynamically
    block_len = n + 3  # Each block has (N + 3) elements
    p = length(arr) รท block_len  # Number of layers

    # Expanded block size (2 extra elements per layer)
    new_block_len = block_len + 2  
    new_len = p * new_block_len  # Compute the new array size
    new_arr = Vector{T}(undef, new_len)  # Initialize expanded array

    # Track position in new_arr
    idx_new = 1

    for block_idx in 0:(p-1)
        # Identify the sub-block in arr
        start_idx = block_idx * block_len + 1
        stop_idx  = start_idx + block_len - 1
        block = arr[start_idx : stop_idx]  # Extract current block

        # Last element remains unchanged
        last_element = block[end]

        # Determine insertion points dynamically
        partition_size = div(block_len - 1, 2)  # First (N+2)/2 elements
        first_insert_pos = partition_size  # First half insertion index
        second_insert_pos = 2 * partition_size  # Second half insertion index

        # First half
        first_half = block[1:first_insert_pos]
        insert!(first_half, first_insert_pos + 1, first_half[end])  # Copy of last element in this half
        first_half[first_insert_pos] = first_half[first_insert_pos - 1]  # Copy previous element

        # Second half
        second_half = block[first_insert_pos+1:second_insert_pos]
        insert!(second_half, first_insert_pos + 1, second_half[end])  # Copy of last element in this half
        second_half[first_insert_pos] = second_half[first_insert_pos - 1]  # Copy previous element

        # Copy to new array
        for val in first_half
            new_arr[idx_new] = val
            idx_new += 1
        end
        for val in second_half
            new_arr[idx_new] = val
            idx_new += 1
        end
        new_arr[idx_new] = last_element # Copy the last element
        idx_new += 1
    end

    return new_arr
end


# load the MAX2SAT instance data

N = 10
#N = parse(Int, ARGS[1])
num_clauses = 3N

p = 15

PATH = raw"/home/ubuntu/MAX2SAT/"


#subdir = "small_gaps"
# subdir = "large_gaps"

# permutation data
#folder_name = PATH * @sprintf("//MAX2SAT_transformation_instances//N_%i//", N);

# transformation fix time step data 
folder_name = PATH * @sprintf("//MAX2SAT_transformation_instances//trans_test//N_%i//", N);

### change N in the pattern individually 
pattern = r"transformed_MAX2SAT_instance_N_10_idx_(\d{4})\.h5"

###

instance_names = readdir(folder_name)
loop_var = 1
#loop_var = parse(Int, ARGS[2])
total_num_inst = 0


for (k, instance_name) in enumerate(instance_names[loop_var+0:loop_var+199])

    global total_num_inst = k
    println("current instance count: ", k)

    idx = match(pattern, instance_name)[1]
    idx = parse(Int64, idx)
    println("idx: ", idx)

    
    file_name = folder_name * @sprintf("transformed_MAX2SAT_instance_N_%i_idx_%04i.h5", N , idx)

    gs_energy = h5read(file_name, "ground_state_energy") 
    J_mat = h5read(file_name, "couplings"); 
    local_fields = h5read(file_name, "local_fields")
    mf_problem = Problem(0, local_fields, J_mat);
    println(gs_energy)


    MAX_problem = Problem(p, - local_fields, J_mat) # minus sign added to local fields for MAX2SAT


    num_params = Int((N+3)*p)


    global learning_rate = 0.004 #0.002
    niter = 100

    global best_cost = 0
    global best_params = zeros(num_params)
    global best_initial_params = zeros(num_params)
    global best_lr = learning_rate
    global best_probs = zeros(Float64, 2^N)

    """
    min_params = 0.2 #0.35 # starting initial parameter
    #max_params = 0.8
    n_params_step = 8
    
    for j in 1:1
        
        for i in 1:n_params_step
             
            initial_params = vcat([min_params for _ in 1:num_params])
            cost, params, probs, params_hist = optimize_parameters_half(MAX_problem, initial_params, niter=niter, learning_rate=learning_rate)
            #println(initial_params[1])
            #println(cost)
            #println(params)
            
            if abs(cost) > abs(best_cost)
                global best_cost = cost
                global best_params = params
                global best_initial_params = initial_params
                global best_probs = probs
                global best_lr = learning_rate
            end
        
            min_params += 0.05
        end    

        #min_params = 0.0001
        #global learning_rate += 0.0005

    end
    """

    
     # average
    # best parameter
    #global best_initial_params = [0.574934092275773, 0.4859942979672184, 0.4844393522116655, 0.4900297430010131, 0.5113952449711646, 0.44499999999999995, 0.6850763473682759, 0.4183982925869653, 0.4066475827352483, 0.42486763719629617, 0.3893211096647106, 0.44499999999999995, 0.22703727047430994, 0.5165916200155609, 0.48648613241024075, 0.4809955348382518, 0.4891588833506173, 0.4989017367670961, 0.44499999999999995, 0.6132688449592668, 0.40803351813152516, 0.39344818026868406, 0.40540096640244716, 0.3659341491127786, 0.44499999999999995, 0.07151104420133345, 0.44383423845384834, 0.4730372818698257, 0.4664814182056013, 0.4731421534250885, 0.47345030006215216, 0.44499999999999995, 0.608754804676291, 0.4086625335316792, 0.4009235108379359, 0.4036594559997052, 0.3899842660112244, 0.44499999999999995, 0.2614765509798137, 0.41883851832812063, 0.46933174126478605, 0.4596665478160176, 0.4644488045169358, 0.47098599177801004, 0.44499999999999995, 0.5754266753870839, 0.4187827297876116, 0.4187238871521425, 0.4161851176500143, 0.4149815614609079, 0.44499999999999995, 0.2988845393299606, 0.4218373479102631, 0.4680310631910962, 0.4541057549069382, 0.4583076208477702, 0.46866602303472177, 0.44499999999999995, 0.5284388066573459, 0.4340970681416117, 0.4365323347950863, 0.43202163748929534, 0.42853289328794447, 0.44499999999999995, 0.32978157772831407, 0.43244654984728265, 0.46815081657546853, 0.4496135420895979, 0.45224326749250815, 0.4648224670781273, 0.44499999999999995, 0.5005062440330055, 0.4480626003335937, 0.4481856097736868, 0.44422160647031295, 0.43650217120697965, 0.44499999999999995, 0.3549483627460245, 0.44702264382387263, 0.4705031507002436, 0.45256036508289704, 0.4509627047657875, 0.46017197434002916, 0.44499999999999995, 0.48042298736273636, 0.45599589730044043, 0.4518843413535973, 0.45029899696155395, 0.43771793924499003, 0.44499999999999995, 0.377246808559728, 0.45159058097486443, 0.47110932875947775, 0.45945659976186953, 0.4519019035740445, 0.4514188674955001, 0.44499999999999995, 0.4676811453131962, 0.4571978594116177, 0.4493835959790612, 0.4506783710583263, 0.4372823795162426, 0.44499999999999995, 0.38798866134189786, 0.4491082567063021, 0.4697894182958982, 0.46171529715206666, 0.45150006955002586, 0.4438774195257375, 0.44499999999999995, 0.4541406412388372, 0.45342464756216155, 0.4441499926517893, 0.4492762380165828, 0.44086665173945716, 0.44499999999999995, 0.4057814143302342, 0.4484080105817864, 0.4648755770752565, 0.4574778797981301, 0.44857774894479396, 0.442442174180638, 0.44499999999999995, 0.42802009915830785, 0.44794542760832207, 0.44073552595808574, 0.4506289487931931, 0.44290694953553844, 0.44499999999999995, 0.43190418785073686, 0.4493412301461646, 0.45147577557610025, 0.4486286332394916, 0.44153184618827346, 0.4349659572950772, 0.44499999999999995, 0.40722151017486025, 0.4438037668258269, 0.44144637725138614, 0.4581578861216832, 0.4443382494875812, 0.44499999999999995, 0.46026488825012823, 0.4487898128154991, 0.43283556298323056, 0.4352388621533646, 0.42549776302709946, 0.41369519298267693, 0.44499999999999995, 0.38789403045865634, 0.44227434861410914, 0.4461969457388033, 0.4692513811974024, 0.4546934558035419, 0.44499999999999995, 0.4936056188407999, 0.44289843498873116, 0.41214699336727706, 0.419689321286789, 0.40202171010752785, 0.38748307228269363, 0.44499999999999995, 0.36634549449335785, 0.44305836359079, 0.45204480134840647, 0.4773720424825866, 0.4684491435813327, 0.44499999999999995, 0.5521745614021181, 0.4297440530775167, 0.398885972856668, 0.3990407620980031, 0.3814167732952794, 0.37177266925299834, 0.44499999999999995, 0.29526060065645554, 0.4449434998844407, 0.45587504213054464, 0.477677793674063, 0.4742717144550987, 0.44499999999999995, 0.626415541213598, 0.4277677281668565, 0.42050375126025663, 0.41893612119629065, 0.4028100924764996, 0.39630731154758675, 0.44499999999999995, 0.2013567094564729, 0.4460041258096033, 0.4549912714619196, 0.46738109445146786, 0.4682083475285518, 0.44499999999999995, 0.7477259929336465]
    
    global best_initial_params = [0.6691170700329104, 0.524241949939865, 0.5219950418466569, 0.5344866264870464, 0.555527504814493, 0.44500000000000023, 0.7405336821996111, 0.40366277258712124, 0.3904559136249417, 0.39873657644642335, 0.3722020755547566, 0.44500000000000023, 0.190604049631669, 0.6107622836707427, 0.5383683207672475, 0.5315982946797796, 0.5475637506677804, 0.5512769072913685, 0.44500000000000023, 0.6204954308186341, 0.36650931986497626, 0.352132701825671, 0.346936414321716, 0.3191067010549946, 0.44500000000000023, 0.028019121506650025, 0.5030864893667761, 0.5250553797247843, 0.517594796493201, 0.5216257922867288, 0.5111994300870005, 0.44500000000000023, 0.6624283106999879, 0.35605387900167207, 0.34920757520557416, 0.33645365040045844, 0.3403283257005765, 0.44500000000000023, 0.2557549271801637, 0.4560441417006818, 0.5191728368454724, 0.5105161827394987, 0.5029715286118261, 0.4934002284915349, 0.44500000000000023, 0.6417645960563059, 0.3745416912246676, 0.3739720312481214, 0.36459168342417697, 0.3832526071748493, 0.44500000000000023, 0.2528943855184884, 0.44221700042695006, 0.516405696674439, 0.5046979188327535, 0.4927801984032594, 0.48212057906307015, 0.44500000000000023, 0.5640229692868153, 0.4079136002265295, 0.4075347229229323, 0.40561038520480536, 0.41820485506888466, 0.44500000000000023, 0.3029382430524692, 0.44690585928867405, 0.5116429202248631, 0.49438047820355285, 0.4838334997341335, 0.47575377431977117, 0.44500000000000023, 0.5160601100762308, 0.4382011452129245, 0.4356646742203484, 0.43948405583710787, 0.441129712508393, 0.44500000000000023, 0.3413832319623702, 0.46556956486050105, 0.5074615595885541, 0.4835594890479687, 0.47765480769270335, 0.4716012367624851, 0.44500000000000023, 0.49210437875172025, 0.4546532949359753, 0.45140318587673034, 0.4580139222803616, 0.44728969386268835, 0.44500000000000023, 0.36733651920459387, 0.4745051036453381, 0.503552657474896, 0.4736973597230854, 0.47169362548078075, 0.46296936400659733, 0.44500000000000023, 0.4798685198662789, 0.4568896181901303, 0.45705280263727865, 0.46378184947379686, 0.4460151781585185, 0.44500000000000023, 0.3939144685046839, 0.47220464559472247, 0.4971346271111329, 0.46351581585143653, 0.4640176085193587, 0.4530156188914946, 0.44500000000000023, 0.46637770787163857, 0.4505373655823949, 0.45848391028710717, 0.4658254025178579, 0.44805122240484385, 0.44500000000000023, 0.42549110966171777, 0.4671248252303971, 0.4842503037596804, 0.4546279039176077, 0.4552615882602338, 0.4447969438543342, 0.44500000000000023, 0.4369283691845627, 0.4436330003735393, 0.46185986241624166, 0.47269112895637977, 0.4526202662963596, 0.44500000000000023, 0.45766609756391274, 0.466197937267993, 0.46050407671954835, 0.44104125825672674, 0.4424899735403065, 0.4302995278153548, 0.44500000000000023, 0.4041332944642592, 0.44221607914991556, 0.4704478249784528, 0.48886458409911404, 0.4626538858600801, 0.44500000000000023, 0.4881049077052066, 0.4654177628364063, 0.4305283253183003, 0.4168486147409315, 0.4185574805415378, 0.4046550623761979, 0.44500000000000023, 0.36980365297481926, 0.4464768168483284, 0.483258370957252, 0.5106940149905254, 0.48478280272467555, 0.44500000000000023, 0.527175669101304, 0.4514486282744377, 0.3952800338710273, 0.38490242514211503, 0.37873967075932086, 0.3663878483622621, 0.44500000000000023, 0.34781477117095805, 0.45311523453123087, 0.49342891248800613, 0.5276282213108956, 0.5089702502048434, 0.44500000000000023, 0.5981449368225039, 0.40678415180735406, 0.3624737405451279, 0.3439347070641373, 0.3300525555843963, 0.3057511893876761, 0.44500000000000023, 0.27943709446266324, 0.45740062457028097, 0.4942658585371869, 0.5266576225221802, 0.5189551235855564, 0.44500000000000023, 0.7320176365781359, 0.3927219348146987, 0.4180173465816127, 0.4018404315932089, 0.36832644417919475, 0.33664609141038326, 0.44500000000000023, 0.16029171234428718, 0.45384146033546796, 0.4801094958417277, 0.49906675962779146, 0.5023221344313058, 0.44500000000000023, 0.9161741335505852]


    # N16
    #global best_initial_params = [0.6038648453638037, 0.5325889142456866, 0.5227279038792847, 0.5224371277445743, 0.5368070671319133, 0.55260753462452, 0.5626719586239887, 0.5850754238984045, 0.47500000000000087, 0.8415653628703919, 0.44329695637667343, 0.4207056929034146, 0.4576720307365116, 0.45298173663069674, 0.42791127440575394, 0.4163900384187138, 0.422776313334856, 0.47500000000000087, 0.15855866452115167, 0.5539056588467941, 0.5378156310621078, 0.5172317093812658, 0.529559743638716, 0.5454870866879797, 0.5484217799517522, 0.5656732470261614, 0.5774520428218437, 0.47500000000000087, 0.7128438418115232, 0.4134615182433914, 0.40649404968650465, 0.43977062284572094, 0.4197028697802719, 0.3899341112698948, 0.3632848652850423, 0.36307313156300436, 0.47500000000000087, 0.05944161147718729, 0.49691115107829453, 0.5184997988393156, 0.5065938145274826, 0.5177621507981547, 0.5198611983199385, 0.520323549692141, 0.5232939124512025, 0.5132236266301371, 0.47500000000000087, 0.7432037013949986, 0.41726534111956554, 0.4236557068978988, 0.43875340450166417, 0.4185160173905007, 0.40098497773318775, 0.3738604096328894, 0.393751795202335, 0.47500000000000087, 0.2501701393048527, 0.4627741982515536, 0.5068124871682997, 0.5045027698996263, 0.5067619432548943, 0.5006107649717383, 0.5065553666874343, 0.49317536012762275, 0.47588099702220915, 0.47500000000000087, 0.6735223282215063, 0.4424816101433555, 0.4511418064813428, 0.45361381412144064, 0.4430664951149415, 0.43525750560420234, 0.42241127991626237, 0.44868245218777814, 0.47500000000000087, 0.24526998979436954, 0.4513880154101553, 0.5068942813315271, 0.5057569120427436, 0.4990824084161193, 0.4860721283752815, 0.4972697081025919, 0.47604609942844806, 0.46835147491588075, 0.47500000000000087, 0.5593469129852016, 0.46923864600571924, 0.47543872807856746, 0.4733973953500702, 0.47208863778169047, 0.470720613439423, 0.47167439988217813, 0.48498794273142637, 0.47500000000000087, 0.2997899854858489, 0.4546648227559287, 0.5033299235854575, 0.4987653180237357, 0.4884600805771453, 0.4767350710083829, 0.48845106743340483, 0.47023025590976464, 0.46698767462383245, 0.47500000000000087, 0.5000727643076529, 0.4861894197504696, 0.49212545269584873, 0.48868682342844066, 0.49241688597463534, 0.49286644489650316, 0.49934768628154663, 0.5011803007346932, 0.47500000000000087, 0.31433691567109817, 0.4700344928469989, 0.496486819449393, 0.49231208009302674, 0.4836652903707501, 0.4797320094923198, 0.488253420779538, 0.47324723979434535, 0.4712727740634215, 0.47500000000000087, 0.48814364921645476, 0.49075363685704426, 0.4993105477393465, 0.4947154194343611, 0.4989922529010355, 0.49771109864334406, 0.5027073944307965, 0.5010221143611, 0.47500000000000087, 0.33080120110327343, 0.48535782701250374, 0.4913907828017648, 0.4899835590192472, 0.48473312323332685, 0.487306378447999, 0.4864926688813984, 0.4803517577174929, 0.47709409391054697, 0.47500000000000087, 0.48759756362650813, 0.4855268135141311, 0.494080349857735, 0.49283814851521823, 0.494035608754903, 0.49037810824076167, 0.49003976247628045, 0.48928812882098305, 0.47500000000000087, 0.36229620557467024, 0.4884500472108811, 0.4885122353003247, 0.4822522449139115, 0.48292097197300643, 0.4880145863244179, 0.48325674566527005, 0.4841288959241931, 0.48118491232631205, 0.47500000000000087, 0.48532991116624374, 0.47681071132079306, 0.4842602313934368, 0.4876236418787559, 0.48541228727574953, 0.4793089509145691, 0.4744867490669382, 0.47429002130033093, 0.47500000000000087, 0.4050409427738203, 0.48086411466644674, 0.4870527728887265, 0.47546185011573167, 0.47842547278960756, 0.4823373730243263, 0.4835302636577781, 0.484905128908348, 0.48186859930966874, 0.47500000000000087, 0.46456512538089945, 0.4700790585229053, 0.47741811480927643, 0.483529229741987, 0.48192990625383525, 0.47091288554274485, 0.4674057463123064, 0.46379419324321963, 0.47500000000000087, 0.44773312176313396, 0.4771200241185691, 0.4788529751761009, 0.4725117282975642, 0.472030837381707, 0.47322930755829185, 0.4810143538366151, 0.4782104194808936, 0.475427839462041, 0.47500000000000087, 0.42721018176652154, 0.46819505140516954, 0.47566698722980527, 0.4836078488260921, 0.48729519684124456, 0.4734779327493415, 0.47441930215321676, 0.4671663906461175, 0.47500000000000087, 0.4865567471789371, 0.47386956293919136, 0.46476606876301063, 0.4635262388435647, 0.4557723439282376, 0.4593301743785421, 0.46939057215635754, 0.46077111778492996, 0.4593804309367045, 0.47500000000000087, 0.38330485494817623, 0.47003034578215713, 0.4781322857780523, 0.4880902573697222, 0.4983298980147196, 0.48792796624287893, 0.49401034720316866, 0.48747325600490177, 0.47500000000000087, 0.5220965143345769, 0.45863576088471847, 0.44915464741235955, 0.4390339672654996, 0.4290857149259584, 0.4406644866614964, 0.4523578296742899, 0.43073501400615266, 0.44107473588765883, 0.47500000000000087, 0.3512368250358247, 0.47172235129115797, 0.4821241222406746, 0.49336463440240436, 0.507959549760379, 0.5053284754833378, 0.5154323070092739, 0.5134051785956139, 0.47500000000000087, 0.5804915471587582, 0.42792766153543055, 0.4198747317851252, 0.4087904938476536, 0.4016235026512096, 0.40774673291598856, 0.41402898500485813, 0.38889759084191994, 0.4017721429735157, 0.47500000000000087, 0.27792226075269877, 0.4726548108754337, 0.48498526488745997, 0.49456001527806237, 0.5107221713606709, 0.5129411130640465, 0.525346898152548, 0.5299359357971904, 0.47500000000000087, 0.6835098651569304, 0.4164582962535529, 0.428163467681817, 0.43278443007941425, 0.42309128596987816, 0.42362475104284775, 0.4018964135925151, 0.3873881063622133, 0.38610381351634904, 0.47500000000000087, 0.1499077866977663, 0.47539423519456525, 0.48480077289758566, 0.48974229545547565, 0.5012485411435308, 0.5016815461118944, 0.5146675349191259, 0.5269267523115162, 0.47500000000000087, 0.8534391700259806]
    #[0.5441765803490629, 0.5041328445959575, 0.5017092268283665, 0.5017610019662715, 0.5090197627352818, 0.515767482228555, 0.5233766397995308, 0.5466729716439225, 0.4750000000000001, 0.8155143723720419, 0.45947446228497757, 0.44183203141468097, 0.47432972217957897, 0.464439232163303, 0.45589848411498013, 0.44397509956273523, 0.44195035668334215, 0.4750000000000001, 0.21327330618792556, 0.5175566793069888, 0.5035444854374235, 0.49454520544145886, 0.5046588263758731, 0.5114566045664768, 0.5084540562623853, 0.5214918210251882, 0.5381727400391125, 0.4750000000000001, 0.6971155683368392, 0.44875276638025036, 0.4393077330265731, 0.46847680263261926, 0.45025663266651883, 0.44113376541048144, 0.4203627105020559, 0.40778636154260317, 0.4750000000000001, 0.09662500063418503, 0.49348986854287924, 0.49407123291071037, 0.4906049036461345, 0.4997766666371503, 0.4966813696458342, 0.4962452283722918, 0.49730766540712423, 0.49446381462129824, 0.4750000000000001, 0.6646741693624951, 0.4516599932447211, 0.4500594226675493, 0.4663222772707451, 0.4500095510913057, 0.4444126365032777, 0.4263625218633723, 0.42560101976851505, 0.4750000000000001, 0.28570787661644925, 0.4731166902169314, 0.49047792336238627, 0.4918122629140343, 0.4965345847365385, 0.48655672265231376, 0.49649891730204726, 0.48118661196536544, 0.46944470544238415, 0.4750000000000001, 0.6107076609766969, 0.4620689813339989, 0.4642116047626734, 0.46879229868503003, 0.4608346226545235, 0.4555052971913782, 0.4500835109559348, 0.4581366856142486, 0.4750000000000001, 0.3143007834875847, 0.46583095065210617, 0.49265519320583495, 0.4940048042411093, 0.4935659475403934, 0.47753948144760683, 0.49488339244499063, 0.47159984923392234, 0.46840464388894426, 0.4750000000000001, 0.5385032491686252, 0.473274107465212, 0.4775507540310199, 0.4735354458028566, 0.4734877261562591, 0.4687547858886054, 0.47497811666443124, 0.4807177831427544, 0.4750000000000001, 0.3440653093280145, 0.4687054732728537, 0.49276966808902783, 0.49116586790498573, 0.4864827364317611, 0.47368999935108375, 0.4883995919005845, 0.47072354243044423, 0.4731369874986816, 0.4750000000000001, 0.48955473382007203, 0.48079542842554857, 0.48633546091553426, 0.4779439584239598, 0.48254889725820654, 0.47901939935049515, 0.4896009612127624, 0.4905000249059501, 0.4750000000000001, 0.366137944911936, 0.4777709246480229, 0.4893163646497046, 0.48685754938972525, 0.4823302776474012, 0.4784051621247373, 0.4842530554442246, 0.4742078079958551, 0.4788928945427175, 0.4750000000000001, 0.47460614444528015, 0.4830470037578606, 0.4890276499738787, 0.48019305461380535, 0.4856705626050083, 0.484184538351568, 0.4917372663854593, 0.4899971114338554, 0.4750000000000001, 0.378519912025273, 0.48434404425640576, 0.4840976743788329, 0.48244539471820247, 0.4825121113483357, 0.48309913089882084, 0.4791777730173166, 0.4775112055199072, 0.4805030003860116, 0.4750000000000001, 0.47648134403665293, 0.48096942675012927, 0.48536025747414346, 0.4800945280072854, 0.4841863475526383, 0.48380628691532995, 0.48568056042451746, 0.4829718537124341, 0.4750000000000001, 0.40027669785118825, 0.48212779330532507, 0.4805042264150495, 0.4757553907092352, 0.4793261392440022, 0.4795144588758597, 0.47504313716922003, 0.4762406061810022, 0.479108603394628, 0.4750000000000001, 0.48101946713048427, 0.47688722650176213, 0.47948824582465155, 0.4788929092179453, 0.4818808082647287, 0.4791817127040326, 0.4784177995981699, 0.47538226332933925, 0.4750000000000001, 0.4318893412779866, 0.47364447647212576, 0.47895809404627016, 0.47195554446898524, 0.4738532408222863, 0.4729536751328779, 0.4776605142291633, 0.47398693346116066, 0.47834553813752984, 0.4750000000000001, 0.4696940330391876, 0.4726129121157955, 0.4755351981647887, 0.4782610043312337, 0.48198767927398284, 0.4746182596132278, 0.475213578085813, 0.47007656112989976, 0.4750000000000001, 0.4686429481541926, 0.4682559259637912, 0.4725829685433127, 0.47109343324564606, 0.4684108680022826, 0.4691906810323042, 0.48191899716247394, 0.47083657753263014, 0.47465166245998586, 0.4750000000000001, 0.4464268458199291, 0.4698583207317175, 0.4745729139706869, 0.47931453941161184, 0.48469136842993776, 0.474327174821498, 0.47817809357156904, 0.4704898768142913, 0.4750000000000001, 0.5045429938796877, 0.4623041324530832, 0.46330025310856204, 0.4654141726932881, 0.4577728779639041, 0.4626125283574093, 0.4787542093269147, 0.4635273371039806, 0.46240328770936345, 0.4750000000000001, 0.4135652171994165, 0.4686390480744194, 0.47572712675521933, 0.48191308869937083, 0.4882051040204269, 0.47924127787015103, 0.48687274087299404, 0.48105607769038744, 0.4750000000000001, 0.5386137748790892, 0.4541729843379424, 0.45595634760775594, 0.45142919341555565, 0.443196213699235, 0.45192746453127625, 0.468260808170906, 0.44812128470487045, 0.45113020080365585, 0.4750000000000001, 0.3923283483920262, 0.4675162798251516, 0.47712303087944213, 0.4842914738685735, 0.491046747842386, 0.4860722184918778, 0.4965929441604141, 0.4960462775046244, 0.4750000000000001, 0.5892213486913315, 0.4456308650604474, 0.44170078877311436, 0.43729717742077795, 0.4277085735529595, 0.43389714620929765, 0.4407985676342803, 0.4235522407315604, 0.4363440949836982, 0.4750000000000001, 0.31300639710313677, 0.46751679300599475, 0.4776814239655284, 0.4847110640008336, 0.49212037497689876, 0.48907508444124737, 0.500315229640546, 0.504749393136185, 0.4750000000000001, 0.6785397820414532, 0.45775317699204904, 0.449003938256687, 0.45535907040381113, 0.44700990251506817, 0.4515220357597924, 0.4343590795405546, 0.43415491994213484, 0.432144494993209, 0.4750000000000001, 0.19927649929049113, 0.4716128259551965, 0.47724762335749576, 0.48195003773003203, 0.48791007643079326, 0.483767732490882, 0.49393782273633347, 0.502928127748853, 0.4750000000000001, 0.7897156639295524]

    
    """
    niter = 100  
    global learning_rate = 0.001

    #cost, params, probs = optimize_parameters_half(MAX_problem, best_initial_params, niter=niter, learning_rate=learning_rate)
    
    for j in 1:2
        
        cost, params, probs = optimize_parameters_half(MAX_problem, best_initial_params, niter=niter, learning_rate=learning_rate)
        
        if abs(cost) > abs(best_cost)
            global best_cost = cost
            global best_params = params
            #global best_initial_params = initial_params
            global best_lr = learning_rate
            global best_probs = probs
        else
            break
        end

        global learning_rate += 0.009 # 0.004

    end
    
    """
    # one big increase step for learning rate
    global learning_rate = 0.1
    niter = 0
    
    cost, params, probs = optimize_parameters_half(MAX_problem, best_initial_params, niter=niter, learning_rate=learning_rate)
        
    if abs(cost) > abs(best_cost)
        global best_cost = cost
        global best_params = params
        #global best_initial_params = initial_params
        global best_lr = learning_rate
        global best_probs = probs
    end
    


    println("Optimal cost: ", best_cost)
    println("Optimal initial parameter: ", best_initial_params[1])
    println("Optimal parameter: ", best_params[1:10])
    println(best_lr)

    
    # save the optimal parameters and cost

    PATH_w = raw"/home/ubuntu/aqc_VQE"

    #folder_name_w = PATH_w * @sprintf("//vqe_v2_MAX2SAT_data//N_%i//p%i//optimized_parameter_data_20//", N, p);
    #folder_name_w = PATH_w * @sprintf("//vqe_v2_MAX2SAT_data//N_%i//p%i//average_parameter_data//", N, p);
    folder_name_w = PATH_w * @sprintf("//vqe_v2_MAX2SAT_data//N_%i//p%i//final_parameter_data//", N, p);

    #folder_name_w = PATH_w * @sprintf("//vqe_v2_MAX2SAT_data//N_%i//p%i//n12_parameter_test_data//", N, p);


    h5open(folder_name_w * @sprintf("optimized_MAX2SAT_instance_N_%i_idx_%04i.h5", N, idx), "w") do file
        write(file, "ground_state_energy", gs_energy)           
        write(file, "idx", idx)                               # Save seed
        write(file, "cost_value", best_cost)                    # Save cost values
        write(file, "parameter_angles", best_params)            # Save parameters
        write(file, "initial_parameters", best_initial_params)  # Save initial parameters
        write(file, "learning_rate", best_lr)                   # Save learning rate
        write(file, "probabilities", best_probs)                # Save probs
    end
        
end 

println("============================================================ N = ", N, ", ", total_num_inst," instances, done! ============================================================")
